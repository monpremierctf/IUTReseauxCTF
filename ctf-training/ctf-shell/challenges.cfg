#
# CTF-Shell
# 
# Configuration des challenges
#
# [XXX] Label du challenge, doit être unique, sans contrainte particulière
# name: Home Sweet Home : Nom du challenge tel qu'il apparait sur les pages HTLM
# value: 10 : Nombre de points marqués pour la résolution du challenge
# category: Ghost in the Shell : Catégorie regroupant plusieurs challenges
# flag: flag_{m0n_pr3m13r_fl4g}
# file: (optionnel) : le nom d'un fichier qui sera téléchargeable par les participants.
# description: peut tenir sur une ou plusieures lignes.
#   [espace !!] Les lignes de la description DOIVENT commencer par un ESPACE ou une TABULATION 
#   Utiliser le tag HTML </br> pour marquer un saut de ligne.

[Intro]
theme: Training
category: Ghost in the Shell
label: Bases: Shell
docker: ctf-shell
description: 
  ## Ghost in the Shell
  .
  Vous venez de pénétrer sur un serveur en devinant le login/password d'un utilisateur. 
  Que faites vous maintenant ?
  .
  Les administrateurs et les utilisateurs font souvent de petites entorses à la sécurité pour gagner du temps.
  Droits en execution ou lecture de fichiers ouverts à tous.
  Fichier temporaires qui trainent...
  .
  Nos outils de base pour partir à la chasse aux Flags cachés sur le système sont:
  - ls -al pour trouver les fichiers en .xxx
  - /etc/passwd pour connaitre les répertoires des utilisateurs et compte machines
  - /home, /tmp, /var/tmp, pour les fichiers temporaires
  - find pour lister les fichiers en lectures et les sticky bits
  - les sticky bits sur less, nmap, ...
  - ps pour identifier les process qui tournent et exploiter des races conditions
  - strings pour extraire les chaines de caractère d'un binaire
  - grep pour extraire les 'flags_' de fichiers textes
  .
  Demain, laisserez vous trainer un zip dans /tmp  ?




  

[Challenge_2]
name: Crouching Tiger, Hidden Dragon 
value: 5
category: Ghost in the Shell
flag:  flag02{pOur_v1vr3_h3ur3ux_v1v0ns_cach3s}
description: 
  Parfois les fichiers sont cachés en plein jour.
  ```
  $ ssh yoda@IPSERVER 
  ```
  Connecte toi au serveur en IPSERVER, avec le user 'yoda' et le mot de passe 'naboo'.

  ```
  ls -al
  ```
  Liste les fichiers cachés, et affiche des infos sur le propriétaire et les groupes.



[Challenge_3]
name:  Home Sweet Home
value: 5
category: Ghost in the Shell
flag:  flag03{C_p4s_m4l_ch3z_t01}
description: 
  ```
  $ ssh obiwan@IPSERVER 
  ```
  Connecte toi au serveur en IPSERVER, avec le user 'obiwan' et le mot de passe 'hoth'. 
  .
  Comment ça ton frigo est vide ?
  Et comment est celui de la voisine ?
  Jete un oeil chez /home/padme...
  .
  Les répertoires des utilisateurs sont le plus souvent dans le répertoire /home. Celui de l'administrateur en /root.
  Ce sont les répertoires à examiner en priorité... Ils sont parfois autorisés en lecture.
  Commandes : ls, cat


[Challenge_4]
name:  Résidence secondaire
value: 5
category: Ghost in the Shell
flag:  flag06{a40053051c978701fa8bb66f110fc487}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'jarjar' et le mot de passe 'shili'.
  .
  Certains comptes système comme les serveur web ou de base de donnée n'ont pas de répertoire du tout, ou un répertoire situé dans les données de leur application.
  .
  On les trouve en avant-dernière colonne du fichier /etc/passwd qui est toujours en lecture par tous.
  Utilise cat sur /etc/passwd pour en voir le contenu, et identifie la ligne de mace.
  Ou se trouve le home du compte mace ?
  .
  Commandes : cat, ls
  
[Challenge_5]
name:  C'est juste temporaire
value: 5
category: Ghost in the Shell
flag:  flag04{M4y_th3_f0rc3_b3_w1th_y0u}
description: 
  Connecte toi en ssh à IPSERVER avec le user dooku et le password dagobah.
  .  
  ```bash
  find / -name flag*.txt 2>/dev/null
  ```
  Utilise la commande find pour rechercher tous les fichiers qui ont un nom du type flagXX.txt
  Le 2>/dev/null à la fin de la commande permet de ne pas afficher les messages d'erreurs quand la commande tente d'accéder à des répertoires protégés en lecture.
  Si tu avais utilisé cette commande des le premier flag, tu aurais gagné du temps...
  Les utilisateurs et administrateurs laissent souvent des fichiers interessant dans les répertoires temporaires comme /tmp et /var/tmp.
  .
  Commandes : find, cat



[Challenge_6]
name:  My sweet Business Executive
value: 7
category: Ghost in the Shell
flag:  flag07{4_v0s_1ntu1t10ns_v0us_f13r_1l_f4ut}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'quigong' et le mot de passe 'bespin'.</br></br>

  ```
  ./welcome_07
  ```
  Lancer un fichier exécutable dans le répertoire courant avec ./xxxxx.
  .
  ```
  strings welcome_07
  ```
  Dumper les chaînes de caractères contenues dans le binaire. On y trouve généralement les noms de fichiers de config, et parfois des comptes ou des mots de passe en clair.
  .
  Commandes : ls, ./ , strings


[Challenge_7]
name:  Agent Double
value: 7
category: Ghost in the Shell
flag:  flag09{4ut4nt_3mbr4c3r_un_w00k13}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'grievous' et le mot de passe 'yavin'.
  .
  Utilise les informations qui ont leaké pour te faire passer pour leia avec la commande: su - lea
  .
  Commandes : ls, cat, su


[Challenge_10]
name:  Attrape moi si tu peux
value: 7
category: Ghost in the Shell
flag:  flag10{Un3_41gu1ll3_d4ns_un3_b0tt3_d3_f01n}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'han' et le mot de passe 'ando'.
  .
  Outch, ce fichier est vraiment gros... Ca va prendre des heures de le lire...

  ```
  grep flag liste10.txt
  ```
  Filtrons le pour n'afficher que les lignes avec le mot 'flag'.
  .
  J'ai plein de temps pour improver mon skillz à Candy Crush(tm) maintenant... C'est qui le plus malin ?



[Challenge_11]
name:  Y en a un peu plus, j'vous le mets quand même ?
value: 10
category: Ghost in the Shell
flag:  flag11{3mb4ll3z_c_3st_p3s3}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'c3po' et le mot de passe 'corellia'.
  .
  Les fichiers zip sont des souvent utilisés pour faire des sauvegardes. On y trouve parfois des fichiers de config avec des infos três intéressantes.

  ```
  head flag11.zip
  ```
  Affiche les premières lignes du fichier zip avec head. L'entête commence par PK, c'est bien un zip, on peut lire le nom des fichiers qu'il contient et le flag parait être en clair.
  Intéressant... L'algo ne compresse pas les tout petits fichiers...
  .
  ```
  unzip flag11.zip
  ```
  Il est utile de connaitre les différents outils de compression : zip, unzip, 7zip, rar,... et savoir reconnaitre leurs entêtes caractéristiques.




[Challenge_12]
name:  Du goudron et des plumes
value: 10
category: Ghost in the Shell
flag:  flag12{D3t4rr3r_d3s_t4r3s}
description: 
  Connecte toi au serveur en IPSERVER, avec le user 'finn' et le mot de passe 'yavin'.
  .
  La commande tar est utilisée pour faire tenir toute une arborescence de fichiers en un seul fichier xxx.tar, qui est généralement compressé avec l'algorithme gzip.
  On se retrouve avec un fichier xxx.tar.gz, ou xxx.tgz.
  Décompresse le avec la commande tar (options) (fichier)
  .
  Si tu as vraiment la flemme de chercher les options de la commande, tu peux regarder le contenu du fichier avec vi.
  L'éditeur est carrément old school, mais il est utile de le connaître car il est présent presque partout.
  Pour en sortir : [Esc] :q!
  .
  vim est plus sympathique, mais pas toujours installé. Enjoy !
