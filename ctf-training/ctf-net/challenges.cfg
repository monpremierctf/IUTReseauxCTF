#
# ctf-net-pcap
#
# Configuration des challenges
#
# [XXX] Label du challenge, doit être unique, sans contrainte particulière
# name: Home Sweet Home : Nom du challenge tel qu'il apparait sur les pages HTLM
# value: 10 : Nombre de points marqués pour la résolution du challenge
# category: Ghost in the Shell : Catégorie regroupant plusieurs challenges
# flag: flag_{m0n_pr3m13r_fl4g} : format libre
# file: (optionnel) : le nom d'un fichier qui sera téléchargeable par les participants.
# description: 
#    La description peut tenir sur une ou plusieurs lignes.
#    [espace !!] Les lignes de la description doivent commencer par un ESPACE ou une TABULATION
#    Dès qu'une ligne recommence à la première colonne, on a terminé la description
#    Cette description est collée dans du HTML après un passage dans un léger parser Markdown
#    Utiliser la balise </br> pour chaque retour à la ligne
#    Mettre les morçeaux de code ou commande entre deux lignes de ```
#    ```
#    $ commande shell, ou bout de code
#    ```



[Intro]
theme: Training
category: Network protocol
label: Network protocol
description: 
    ## Network Protocols
    .
    Vous êtes installé bien au chaud dans un shell sur une des machines du réseau informatique.
    En sniffant les paquets qui circulent sur le réseau, vous réalisez que les utilisateurs utilisent des protocoles non sécurisés.
    Vous allez chercher et trouver des info interessantes dans les flux en utilisant les filtres de l'outil wireshark.
    .
    Site wireshark : [https://www.wireshark.org/#download](https://www.wireshark.org/)
    Win32 app [WiresharkPortable_3.0.2.paf.exe](cache/WiresharkPortable_3.0.2.paf.exe)


[Challenge_1]
name:  Netcat - pcap
value: 10
category:  Network protocol
flag:  flag01{c_3st_p4s_b0_d_3c0ut3r_4ux_p0rtes}
file:  flag01.gz.pcapng
description: 
    L'outil 'netcat', nc de son petit nom, est LE couteau suisse du CTF.
    Il permet d'ouvrir un port en écoute, de s'y connecter à distance et d'envoyer un flux de données comme des messages textes ou des lignes de commande.
    Ils passent tels quels sur le réseau.
    .
    Pour capturer, puis analyser des packets réseau wireshark propose une interface graphique confortable.
    Si wireshark est déjà installé sur ta machine, ouvre le fichier en attachement, sélectionne un des paquets de l'échange, fais Click droit - Suivre - Flux TCP.
    .
    Sinon, il est ausi possible de travailler en ligne de commande avec tshark.
    ```
    tshark -r challenges/ctf-net/flag01.gz.pcapng -z follow,tcp,ascii,0
    ```
    On précise à tshark de lire le fichier avec -f, et de suivre le premier flux tcp en considérant que c'est du texte.




[Challenge_2]
name:  Telnet - pcap
value: 10
category:  Network protocol
flag:   flag_02_telnet_c_pas_net
file:  flag02.gz.pcapng
description: 
    Le protocole Telnet permet de se connecter très simplement à un serveur distant.
    Il commence par négocier les capacités de l'affichage, et permet ensuite une authentification simple par login/mot de passe.
    .
    Le login/mot de passe circule bien sur en clair sur le réseau...
    .
    Le flag change un peut de format, ce sera flag_xxxx. Ce sera le login de l'utilisateur.
    .
    On se demande pourquoi on recommande ssh ...
    ```
    tshark -r challenges/ctf-net/flag02.gz.pcapng -z follow,tcp,ascii,0
    ```


[Challenge_3] 
name:  Telnet again - pcap
value: 10
category:  Network protocol
flag:   flag03{3v1t3r_l3s_tr4nsf3rts_n0n_ch1ffr3s}
file:  flag03.gz.pcapng
description: 
    Telnet permet d'executer des commande shell à distance.
    .
    Visiblement le Chief of Admins a fait un cat de son flag....
    ```
    ls challenges/ctf-net/flag03.gz.pcapng
    ```





[Challenge_4] 
name:  Ftp - pcap
value: 10
category:  Network protocol
flag:   flag04{3v1t3r_VR41M3NT_l3s_tr4nsf3rts_n0n_ch1ffr3s_S3RI3UX}
file:  flag04.gz.pcapng
description: 
    Le protocole ftp permet de se connecter, se déplacer dans une arborescence de répertoires, et télécharger/uploader des fichiers.
    .
    Un premier flux entre les ports 21 et 35952 (click droit, suivre..) sert à l'authentification:
    USER xxx
    PASS yyy
    et au téléchargement d'un fichier RETR flag04.txt.
    Le contenu du fichier est transféré sur un autre port négocié dynamiquement.
    Enlevez le filtre wireshark qui s'est mis en place quand vous avez fait click droit-suivre-tcp.
    .
    Le protocole des paquets est de type FTP-DATA, c'est trop facile de retrouver un flag dans ces conditions...
    ```
    tshark -r challenges/ctf-net/flag04.gz.pcapng -z follow,tcp,ascii,0
    ```
    Le protocole ftp négocie un port dynamiquement, il ne faut pas regarder le fulx tcp numéro 0, mais le 1



[Challenge_5]
name:  SMTP - pcap
value: 10
category:  Network protocol
flag:   flag05{F0r_y0ur_3y3s_0nly}
file:  flag05.gz.pcapng
description: 
    Tous ces protocoles sont de vraies passoires, je vais plutôt envoyer un mail...
    .
    Historiquement, pour envoyer un mail, on se connectait à la main sur un serveur SMTP et on utilisait les commandes:
    ```
    HELO xxx
    MAIL FROM: <martine@myfirstctf.org>
    RCPT TO: <chief_admin@myfirstctf.org>
    DATA
    et je tape tout ce que je veux en terminant par un point tout seul.
    .
    ```
    Mon mail est parti :)
    ```
    ls challenges/ctf-net/flag05.gz.pcapng
    ```


#[Challenge_arp_poison]
#name:  Poison Arpy
#value: 20
#category:  Network protocol
#flag:   flag_tu_3st_vr41m3nt_c3rt41n_qu3_c_3st_s3cur3_?
#description: 
#    Alice, qui est en IPSERVER, envoye des messages coquins à Bob sur l'IP 12.0.0.222 sur le port 8082 en UDP
#    Faite vous passer pour Bob et écoutez ce qu'elle a à dire.
#    ```
#    # arpspoof -i [ethxx] -c host -t [IP d'Alice]   [IP à usurper] 
#    ```



[Challenge_nc]
name:  Netcat
value: 20
category:  Network protocol
flag:   flag_m01_c4_v4
docker: ctf-tcpserver
description: 
    Alice t'attend en TCP sur l'IP IPSERVER et le port 9999
    ```
    # nc [IP] [port] 
    ```


#[Challenge_telnet]
#name:  Telnet
#value: 20
#category:  Network protocol
#flag:   flag{B4s1c_syst3m}
#docker: ctf-telnet
#description: 
#    Aussi vieux que l'internet, telnet est à éviter, mais ça fonctionne encore.
#    Si, nécessaire installe telnet et connecte toi sur IPSERVER en telnet avec le compte marie et le password poppins.


#
# pass
# ls /tmp
# cd /tmp
# get flag.txt
#
#[Challenge_ftp]
#name:  Ftp
#value: 20
#category:  Network protocol
#docker: ctf-ftp
#flag:   flag{T3l3p0rt3z_Mr_Sp0ck}
#description: 
#    Ftp, pour file Transfert Protocole.
#    Installe un client ftp sinécessaire.
#    Connecte toi sur IPSERVER avec le compte spock et le password enterprise.
#    Quelques commandes utiles quand elles passent: ls, cd, get, bye, ...
#    Pro Tips : Pensez à cherchez la différence entre le mode Active et le mode Passive.
#    https://slacksite.com/other/ftp.html


#
# $ nc localhost 110
# +OK Dovecot ready.
# user jean
# +OK
# pass bon
# +OK Logged in.
# list
# +OK 1 messages:
# 1 475
# .
# retr 1
# +OK 475 octets
# Return-Path: <m@mi6.uk>
# [...]
#
#[Challenge_pop3]
#name:  POP3
#value: 30
#category:  Network protocol
#docker: ctf-smtp
#flag:   flag_m0n_n0m_c_3st_B0n_J3an_B0n
#description: 
#    Connectez vous en netcat au IPSERVER sur le port 110 pour relever le courrier de jean.
#    Son mot de passe est bon.
#    Renseignez-vous sur le protocole POP3: https://www.shellhacks.com/retrieve-email-pop3-server-command-line/
    
