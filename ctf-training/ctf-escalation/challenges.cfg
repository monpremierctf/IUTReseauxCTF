#
# Ce fichier décrit les challenges 
#
#[Challenge_]
#name:  
#value: 
#category:  
#flag:  
#file:  (optionnel)
#description: 


[Intro]
theme: Training
category: Privilege Escalation
label: Privilege Escalation
docker: ctf-escalation
description: 
    ## Escalade de privilège
    .
    Vous êtes connecté à un serveur en tant qu'utilisateur sans privilège particulier. 
    Vous allez utiliser quelques méthodes classique pour changer de compte et essayer de devenir administrateur.
    Vous allez chercher les fichiers qui disposent d'un Sticky bit et permettent d'executer des commandes shell.
    .
    find / -perm -4000 -print 2>/dev/null
    .
    Des programmes comme nmap, vim, find, more, less, nano, awk... ou des interpreteurs comme sh, bash, python, perl, ruby permettent, s'il disposent du sticky bit, d'obtenir un shell de leur propriétaire.
    .
    Pour une liste complète des méthodes pour linux: [https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md]


#[Challenge_1]
#name: J ai le shell qui colle
#value: 10
#category: Privilege Escalation
#flag: flag01{1nc0nsc13nte_c4pr1c13us3_sup3rf1c13ll3}
#description: 
#    ```
#    $ ssh theprofessor@IPSERVER -p 2223
#    ```
#    Connecte toi au serveur en IPSERVER, sur le port 2223, avec le user 'theprofessor' et le mot de passe 'darko'.</br></br>#
#
#    ```
#    id
#    ```
#    Utilise la commande id pour savoir quel est ton userId, et à quels groupes tu appartiens.</br>
#    Va faire un tour dans le /home de tokio.</br></br>
#    
#    ```
#    cd /home/tokio
#    ls -al 
#    ```
#    Tu vois ce petit s ? Tokio a laissé trainer l executable du shell bash avec un sticky bit activé. Si tu lances ce shell, il va s executer sous le userId de son propriétaire, tokio.</br></br>
#    
#    ```
#    ./bash
#    ```
#    N oublie pas le ./ du bash, pour executer ce binaire et pas celui contenu dans ton $PATH.</br></br>
#    
#    ```
#    id
#    ```
#    Qui es tu maintenant ?
#    

[Challenge_2]
name: Pas moins 
value: 10
category:  Privilege Escalation
flag:  flag02{l_3sp01r_c_3st_c0mm3_l3s_d0m1n0s}
description: 
    Connecte toi au serveur en IPSERVER, avec le user 'tokio' et le mot de passe 'esther'.
    
    ```
    id
    ```
    Regarde quel est ton id.
    .
    Va dans le répertoire de moscow avec la commande cd.
    Essaye de lire son flag.
    
    ```
    ls -al
    ./less (fichier que tu as le droit de lire...)
    ```
    Le binaire less possède un sticky bit. Less est un utilitaire qui permet de lire un fichier et de se déplacer en avant et en arrière. Tu vas pouvoir lire le fichier comme si tu étais moscow.
    Utilise 'q' pour quitter less.
#    Tu peux ouvrir un shell en tapant '!sh'.
#    Sors du less en tapant 'q'.
#    ```
#    id 
#    cat flag02.txt
#    ```




  
   
[Challenge_3]
name:  Trouvé !
value: 10
category:  Privilege Escalation
flag:  flag03{j3_su1s_un_b1d0n_d_3ss3nc3_av3c_un3_4llum3tt3}
description: 
    Connecte toi au serveur en IPSERVER, avec le user 'moscow' et le mot de passe 'alvaro'.
    .   
    Va dans le répertoire de rio et essaye de lire son flag.
    
    ```
    ls -al
    ```
    Le binaire find possède un sticky bit. Tu vas pouvoir l'utiliser comme si tu étais rio.
    L'option -exec permet de lancer des commandes shell. Utilise la pour lancer la commande id.
    
    ```
    ./find . -name flag* -exec cat {} \;
    ```
    Lisons le flag.
    



[Challenge_4]
name:  Une petite histoire du temps
value: 10
category:  Privilege Escalation
flag:  flag04{sup3r_j_4im3_l3s_f3ux_d3_j01e}
#file:  
description: 
    Connecte toi au serveur en IPSERVER, avec le user 'rio' et le mot de passe 'paco'.
    .
    Regarde quel est ton id.
    Va dans le répertoire de berlin.
    .
    Le binaire awk possède un sticky bit. awk est un utilitaire de manipulation de fichier. Tu vas pouvoir l'utiliser comme si tu étais rio. Il permet de lancer des commandes shell sur des fichiers.
    
    ```
    ./awk 'BEGIN{file="flag04.txt";while ((getline<file) > 0) {print}}'
    ```
    Lisons le flag.
    

